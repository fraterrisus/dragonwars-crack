package com.hitchhikerprod.dragonwars;

import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.util.function.Function;

public class Images {
    public static void convertEgaData(BufferedImage output, Function<Integer, Integer> lookup,
                                      int baseIndex, int x, int y) {
        final int[] indices = new int[4];
        final int[] words = new int[4];

        for (int i = 0; i < 4; i++) { indices[i] = lookup.apply(baseIndex + i); }

        words[3] = TABLE_2A80[indices[0]] |
            TABLE_2E80[indices[1]] |
            TABLE_3280[indices[2]] |
            TABLE_3680[indices[3]];
        words[1] = TABLE_2C80[indices[0]] |
            TABLE_3080[indices[1]] |
            TABLE_3480[indices[2]] |
            TABLE_3880[indices[3]];

        words[2] = (words[3] & 0xff00) >> 8;
        words[3] =  words[3] & 0x00ff;
        words[0] = (words[1] & 0xff00) >> 8;
        words[1] =  words[1] & 0x00ff;

        for (int i = 7; i >= 0; i--) {
            final int color = ((words[3] >> i) & 0x01) << 3
                | ((words[2] >> i) & 0x01) << 2
                | ((words[1] >> i) & 0x01) << 1
                | ((words[0] >> i) & 0x01);
            final int rx = x + (7 - i);
            final int colorIndex = convertColorIndex(color);
            // System.out.printf("(%3d,%3d) = %02d %08x\n", rx, y, color, colorIndex);
            output.setRGB(rx, y, colorIndex);
        }
    }

    /* These tables are generated during video_setup_ega() at 0x0322 and written to the video buffer (seg 0x0f69).
     * EGA drawing routines refer to them to translate images into video drawing commands. */

    private static final int[] TABLE_2A80 = {
            0x0000, 0x0000, 0x0000, 0x0000, 0x4000, 0x4000, 0x4000, 0x4000,
            0x0040, 0x0040, 0x0040, 0x0040, 0x4040, 0x4040, 0x4040, 0x4040,
            0x0000, 0x0000, 0x0000, 0x0000, 0x4000, 0x4000, 0x4000, 0x4000,
            0x0040, 0x0040, 0x0040, 0x0040, 0x4040, 0x4040, 0x4040, 0x4040,
            0x0000, 0x0000, 0x0000, 0x0000, 0x4000, 0x4000, 0x4000, 0x4000,
            0x0040, 0x0040, 0x0040, 0x0040, 0x4040, 0x4040, 0x4040, 0x4040,
            0x0000, 0x0000, 0x0000, 0x0000, 0x4000, 0x4000, 0x4000, 0x4000,
            0x0040, 0x0040, 0x0040, 0x0040, 0x4040, 0x4040, 0x4040, 0x4040,
            0x8000, 0x8000, 0x8000, 0x8000, 0xc000, 0xc000, 0xc000, 0xc000,
            0x8040, 0x8040, 0x8040, 0x8040, 0xc040, 0xc040, 0xc040, 0xc040,
            0x8000, 0x8000, 0x8000, 0x8000, 0xc000, 0xc000, 0xc000, 0xc000,
            0x8040, 0x8040, 0x8040, 0x8040, 0xc040, 0xc040, 0xc040, 0xc040,
            0x8000, 0x8000, 0x8000, 0x8000, 0xc000, 0xc000, 0xc000, 0xc000,
            0x8040, 0x8040, 0x8040, 0x8040, 0xc040, 0xc040, 0xc040, 0xc040,
            0x8000, 0x8000, 0x8000, 0x8000, 0xc000, 0xc000, 0xc000, 0xc000,
            0x8040, 0x8040, 0x8040, 0x8040, 0xc040, 0xc040, 0xc040, 0xc040,
            0x0080, 0x0080, 0x0080, 0x0080, 0x4080, 0x4080, 0x4080, 0x4080,
            0x00c0, 0x00c0, 0x00c0, 0x00c0, 0x40c0, 0x40c0, 0x40c0, 0x40c0,
            0x0080, 0x0080, 0x0080, 0x0080, 0x4080, 0x4080, 0x4080, 0x4080,
            0x00c0, 0x00c0, 0x00c0, 0x00c0, 0x40c0, 0x40c0, 0x40c0, 0x40c0,
            0x0080, 0x0080, 0x0080, 0x0080, 0x4080, 0x4080, 0x4080, 0x4080,
            0x00c0, 0x00c0, 0x00c0, 0x00c0, 0x40c0, 0x40c0, 0x40c0, 0x40c0,
            0x0080, 0x0080, 0x0080, 0x0080, 0x4080, 0x4080, 0x4080, 0x4080,
            0x00c0, 0x00c0, 0x00c0, 0x00c0, 0x40c0, 0x40c0, 0x40c0, 0x40c0,
            0x8080, 0x8080, 0x8080, 0x8080, 0xc080, 0xc080, 0xc080, 0xc080,
            0x80c0, 0x80c0, 0x80c0, 0x80c0, 0xc0c0, 0xc0c0, 0xc0c0, 0xc0c0,
            0x8080, 0x8080, 0x8080, 0x8080, 0xc080, 0xc080, 0xc080, 0xc080,
            0x80c0, 0x80c0, 0x80c0, 0x80c0, 0xc0c0, 0xc0c0, 0xc0c0, 0xc0c0,
            0x8080, 0x8080, 0x8080, 0x8080, 0xc080, 0xc080, 0xc080, 0xc080,
            0x80c0, 0x80c0, 0x80c0, 0x80c0, 0xc0c0, 0xc0c0, 0xc0c0, 0xc0c0,
            0x8080, 0x8080, 0x8080, 0x8080, 0xc080, 0xc080, 0xc080, 0xc080,
            0x80c0, 0x80c0, 0x80c0, 0x80c0, 0xc0c0, 0xc0c0, 0xc0c0, 0xc0c0
    };
    private static final int[] TABLE_2C80 = {
            0x0000, 0x4000, 0x0040, 0x4040, 0x0000, 0x4000, 0x0040, 0x4040,
            0x0000, 0x4000, 0x0040, 0x4040, 0x0000, 0x4000, 0x0040, 0x4040,
            0x8000, 0xc000, 0x8040, 0xc040, 0x8000, 0xc000, 0x8040, 0xc040,
            0x8000, 0xc000, 0x8040, 0xc040, 0x8000, 0xc000, 0x8040, 0xc040,
            0x0080, 0x4080, 0x00c0, 0x40c0, 0x0080, 0x4080, 0x00c0, 0x40c0,
            0x0080, 0x4080, 0x00c0, 0x40c0, 0x0080, 0x4080, 0x00c0, 0x40c0,
            0x8080, 0xc080, 0x80c0, 0xc0c0, 0x8080, 0xc080, 0x80c0, 0xc0c0,
            0x8080, 0xc080, 0x80c0, 0xc0c0, 0x8080, 0xc080, 0x80c0, 0xc0c0,
            0x0000, 0x4000, 0x0040, 0x4040, 0x0000, 0x4000, 0x0040, 0x4040,
            0x0000, 0x4000, 0x0040, 0x4040, 0x0000, 0x4000, 0x0040, 0x4040,
            0x8000, 0xc000, 0x8040, 0xc040, 0x8000, 0xc000, 0x8040, 0xc040,
            0x8000, 0xc000, 0x8040, 0xc040, 0x8000, 0xc000, 0x8040, 0xc040,
            0x0080, 0x4080, 0x00c0, 0x40c0, 0x0080, 0x4080, 0x00c0, 0x40c0,
            0x0080, 0x4080, 0x00c0, 0x40c0, 0x0080, 0x4080, 0x00c0, 0x40c0,
            0x8080, 0xc080, 0x80c0, 0xc0c0, 0x8080, 0xc080, 0x80c0, 0xc0c0,
            0x8080, 0xc080, 0x80c0, 0xc0c0, 0x8080, 0xc080, 0x80c0, 0xc0c0,
            0x0000, 0x4000, 0x0040, 0x4040, 0x0000, 0x4000, 0x0040, 0x4040,
            0x0000, 0x4000, 0x0040, 0x4040, 0x0000, 0x4000, 0x0040, 0x4040,
            0x8000, 0xc000, 0x8040, 0xc040, 0x8000, 0xc000, 0x8040, 0xc040,
            0x8000, 0xc000, 0x8040, 0xc040, 0x8000, 0xc000, 0x8040, 0xc040,
            0x0080, 0x4080, 0x00c0, 0x40c0, 0x0080, 0x4080, 0x00c0, 0x40c0,
            0x0080, 0x4080, 0x00c0, 0x40c0, 0x0080, 0x4080, 0x00c0, 0x40c0,
            0x8080, 0xc080, 0x80c0, 0xc0c0, 0x8080, 0xc080, 0x80c0, 0xc0c0,
            0x8080, 0xc080, 0x80c0, 0xc0c0, 0x8080, 0xc080, 0x80c0, 0xc0c0,
            0x0000, 0x4000, 0x0040, 0x4040, 0x0000, 0x4000, 0x0040, 0x4040,
            0x0000, 0x4000, 0x0040, 0x4040, 0x0000, 0x4000, 0x0040, 0x4040,
            0x8000, 0xc000, 0x8040, 0xc040, 0x8000, 0xc000, 0x8040, 0xc040,
            0x8000, 0xc000, 0x8040, 0xc040, 0x8000, 0xc000, 0x8040, 0xc040,
            0x0080, 0x4080, 0x00c0, 0x40c0, 0x0080, 0x4080, 0x00c0, 0x40c0,
            0x0080, 0x4080, 0x00c0, 0x40c0, 0x0080, 0x4080, 0x00c0, 0x40c0,
            0x8080, 0xc080, 0x80c0, 0xc0c0, 0x8080, 0xc080, 0x80c0, 0xc0c0,
            0x8080, 0xc080, 0x80c0, 0xc0c0, 0x8080, 0xc080, 0x80c0, 0xc0c0
    };
    private static final int[] TABLE_2E80 = {
            0x0000, 0x0000, 0x0000, 0x0000, 0x1000, 0x1000, 0x1000, 0x1000,
            0x0010, 0x0010, 0x0010, 0x0010, 0x1010, 0x1010, 0x1010, 0x1010,
            0x0000, 0x0000, 0x0000, 0x0000, 0x1000, 0x1000, 0x1000, 0x1000,
            0x0010, 0x0010, 0x0010, 0x0010, 0x1010, 0x1010, 0x1010, 0x1010,
            0x0000, 0x0000, 0x0000, 0x0000, 0x1000, 0x1000, 0x1000, 0x1000,
            0x0010, 0x0010, 0x0010, 0x0010, 0x1010, 0x1010, 0x1010, 0x1010,
            0x0000, 0x0000, 0x0000, 0x0000, 0x1000, 0x1000, 0x1000, 0x1000,
            0x0010, 0x0010, 0x0010, 0x0010, 0x1010, 0x1010, 0x1010, 0x1010,
            0x2000, 0x2000, 0x2000, 0x2000, 0x3000, 0x3000, 0x3000, 0x3000,
            0x2010, 0x2010, 0x2010, 0x2010, 0x3010, 0x3010, 0x3010, 0x3010,
            0x2000, 0x2000, 0x2000, 0x2000, 0x3000, 0x3000, 0x3000, 0x3000,
            0x2010, 0x2010, 0x2010, 0x2010, 0x3010, 0x3010, 0x3010, 0x3010,
            0x2000, 0x2000, 0x2000, 0x2000, 0x3000, 0x3000, 0x3000, 0x3000,
            0x2010, 0x2010, 0x2010, 0x2010, 0x3010, 0x3010, 0x3010, 0x3010,
            0x2000, 0x2000, 0x2000, 0x2000, 0x3000, 0x3000, 0x3000, 0x3000,
            0x2010, 0x2010, 0x2010, 0x2010, 0x3010, 0x3010, 0x3010, 0x3010,
            0x0020, 0x0020, 0x0020, 0x0020, 0x1020, 0x1020, 0x1020, 0x1020,
            0x0030, 0x0030, 0x0030, 0x0030, 0x1030, 0x1030, 0x1030, 0x1030,
            0x0020, 0x0020, 0x0020, 0x0020, 0x1020, 0x1020, 0x1020, 0x1020,
            0x0030, 0x0030, 0x0030, 0x0030, 0x1030, 0x1030, 0x1030, 0x1030,
            0x0020, 0x0020, 0x0020, 0x0020, 0x1020, 0x1020, 0x1020, 0x1020,
            0x0030, 0x0030, 0x0030, 0x0030, 0x1030, 0x1030, 0x1030, 0x1030,
            0x0020, 0x0020, 0x0020, 0x0020, 0x1020, 0x1020, 0x1020, 0x1020,
            0x0030, 0x0030, 0x0030, 0x0030, 0x1030, 0x1030, 0x1030, 0x1030,
            0x2020, 0x2020, 0x2020, 0x2020, 0x3020, 0x3020, 0x3020, 0x3020,
            0x2030, 0x2030, 0x2030, 0x2030, 0x3030, 0x3030, 0x3030, 0x3030,
            0x2020, 0x2020, 0x2020, 0x2020, 0x3020, 0x3020, 0x3020, 0x3020,
            0x2030, 0x2030, 0x2030, 0x2030, 0x3030, 0x3030, 0x3030, 0x3030,
            0x2020, 0x2020, 0x2020, 0x2020, 0x3020, 0x3020, 0x3020, 0x3020,
            0x2030, 0x2030, 0x2030, 0x2030, 0x3030, 0x3030, 0x3030, 0x3030,
            0x2020, 0x2020, 0x2020, 0x2020, 0x3020, 0x3020, 0x3020, 0x3020,
            0x2030, 0x2030, 0x2030, 0x2030, 0x3030, 0x3030, 0x3030, 0x3030
    };
    private static final int[] TABLE_3080 = {
            0x0000, 0x1000, 0x0010, 0x1010, 0x0000, 0x1000, 0x0010, 0x1010,
            0x0000, 0x1000, 0x0010, 0x1010, 0x0000, 0x1000, 0x0010, 0x1010,
            0x2000, 0x3000, 0x2010, 0x3010, 0x2000, 0x3000, 0x2010, 0x3010,
            0x2000, 0x3000, 0x2010, 0x3010, 0x2000, 0x3000, 0x2010, 0x3010,
            0x0020, 0x1020, 0x0030, 0x1030, 0x0020, 0x1020, 0x0030, 0x1030,
            0x0020, 0x1020, 0x0030, 0x1030, 0x0020, 0x1020, 0x0030, 0x1030,
            0x2020, 0x3020, 0x2030, 0x3030, 0x2020, 0x3020, 0x2030, 0x3030,
            0x2020, 0x3020, 0x2030, 0x3030, 0x2020, 0x3020, 0x2030, 0x3030,
            0x0000, 0x1000, 0x0010, 0x1010, 0x0000, 0x1000, 0x0010, 0x1010,
            0x0000, 0x1000, 0x0010, 0x1010, 0x0000, 0x1000, 0x0010, 0x1010,
            0x2000, 0x3000, 0x2010, 0x3010, 0x2000, 0x3000, 0x2010, 0x3010,
            0x2000, 0x3000, 0x2010, 0x3010, 0x2000, 0x3000, 0x2010, 0x3010,
            0x0020, 0x1020, 0x0030, 0x1030, 0x0020, 0x1020, 0x0030, 0x1030,
            0x0020, 0x1020, 0x0030, 0x1030, 0x0020, 0x1020, 0x0030, 0x1030,
            0x2020, 0x3020, 0x2030, 0x3030, 0x2020, 0x3020, 0x2030, 0x3030,
            0x2020, 0x3020, 0x2030, 0x3030, 0x2020, 0x3020, 0x2030, 0x3030,
            0x0000, 0x1000, 0x0010, 0x1010, 0x0000, 0x1000, 0x0010, 0x1010,
            0x0000, 0x1000, 0x0010, 0x1010, 0x0000, 0x1000, 0x0010, 0x1010,
            0x2000, 0x3000, 0x2010, 0x3010, 0x2000, 0x3000, 0x2010, 0x3010,
            0x2000, 0x3000, 0x2010, 0x3010, 0x2000, 0x3000, 0x2010, 0x3010,
            0x0020, 0x1020, 0x0030, 0x1030, 0x0020, 0x1020, 0x0030, 0x1030,
            0x0020, 0x1020, 0x0030, 0x1030, 0x0020, 0x1020, 0x0030, 0x1030,
            0x2020, 0x3020, 0x2030, 0x3030, 0x2020, 0x3020, 0x2030, 0x3030,
            0x2020, 0x3020, 0x2030, 0x3030, 0x2020, 0x3020, 0x2030, 0x3030,
            0x0000, 0x1000, 0x0010, 0x1010, 0x0000, 0x1000, 0x0010, 0x1010,
            0x0000, 0x1000, 0x0010, 0x1010, 0x0000, 0x1000, 0x0010, 0x1010,
            0x2000, 0x3000, 0x2010, 0x3010, 0x2000, 0x3000, 0x2010, 0x3010,
            0x2000, 0x3000, 0x2010, 0x3010, 0x2000, 0x3000, 0x2010, 0x3010,
            0x0020, 0x1020, 0x0030, 0x1030, 0x0020, 0x1020, 0x0030, 0x1030,
            0x0020, 0x1020, 0x0030, 0x1030, 0x0020, 0x1020, 0x0030, 0x1030,
            0x2020, 0x3020, 0x2030, 0x3030, 0x2020, 0x3020, 0x2030, 0x3030,
            0x2020, 0x3020, 0x2030, 0x3030, 0x2020, 0x3020, 0x2030, 0x3030
    };
    private static final int[] TABLE_3280 = {
            0x0000, 0x0000, 0x0000, 0x0000, 0x0400, 0x0400, 0x0400, 0x0400,
            0x0004, 0x0004, 0x0004, 0x0004, 0x0404, 0x0404, 0x0404, 0x0404,
            0x0000, 0x0000, 0x0000, 0x0000, 0x0400, 0x0400, 0x0400, 0x0400,
            0x0004, 0x0004, 0x0004, 0x0004, 0x0404, 0x0404, 0x0404, 0x0404,
            0x0000, 0x0000, 0x0000, 0x0000, 0x0400, 0x0400, 0x0400, 0x0400,
            0x0004, 0x0004, 0x0004, 0x0004, 0x0404, 0x0404, 0x0404, 0x0404,
            0x0000, 0x0000, 0x0000, 0x0000, 0x0400, 0x0400, 0x0400, 0x0400,
            0x0004, 0x0004, 0x0004, 0x0004, 0x0404, 0x0404, 0x0404, 0x0404,
            0x0800, 0x0800, 0x0800, 0x0800, 0x0c00, 0x0c00, 0x0c00, 0x0c00,
            0x0804, 0x0804, 0x0804, 0x0804, 0x0c04, 0x0c04, 0x0c04, 0x0c04,
            0x0800, 0x0800, 0x0800, 0x0800, 0x0c00, 0x0c00, 0x0c00, 0x0c00,
            0x0804, 0x0804, 0x0804, 0x0804, 0x0c04, 0x0c04, 0x0c04, 0x0c04,
            0x0800, 0x0800, 0x0800, 0x0800, 0x0c00, 0x0c00, 0x0c00, 0x0c00,
            0x0804, 0x0804, 0x0804, 0x0804, 0x0c04, 0x0c04, 0x0c04, 0x0c04,
            0x0800, 0x0800, 0x0800, 0x0800, 0x0c00, 0x0c00, 0x0c00, 0x0c00,
            0x0804, 0x0804, 0x0804, 0x0804, 0x0c04, 0x0c04, 0x0c04, 0x0c04,
            0x0008, 0x0008, 0x0008, 0x0008, 0x0408, 0x0408, 0x0408, 0x0408,
            0x000c, 0x000c, 0x000c, 0x000c, 0x040c, 0x040c, 0x040c, 0x040c,
            0x0008, 0x0008, 0x0008, 0x0008, 0x0408, 0x0408, 0x0408, 0x0408,
            0x000c, 0x000c, 0x000c, 0x000c, 0x040c, 0x040c, 0x040c, 0x040c,
            0x0008, 0x0008, 0x0008, 0x0008, 0x0408, 0x0408, 0x0408, 0x0408,
            0x000c, 0x000c, 0x000c, 0x000c, 0x040c, 0x040c, 0x040c, 0x040c,
            0x0008, 0x0008, 0x0008, 0x0008, 0x0408, 0x0408, 0x0408, 0x0408,
            0x000c, 0x000c, 0x000c, 0x000c, 0x040c, 0x040c, 0x040c, 0x040c,
            0x0808, 0x0808, 0x0808, 0x0808, 0x0c08, 0x0c08, 0x0c08, 0x0c08,
            0x080c, 0x080c, 0x080c, 0x080c, 0x0c0c, 0x0c0c, 0x0c0c, 0x0c0c,
            0x0808, 0x0808, 0x0808, 0x0808, 0x0c08, 0x0c08, 0x0c08, 0x0c08,
            0x080c, 0x080c, 0x080c, 0x080c, 0x0c0c, 0x0c0c, 0x0c0c, 0x0c0c,
            0x0808, 0x0808, 0x0808, 0x0808, 0x0c08, 0x0c08, 0x0c08, 0x0c08,
            0x080c, 0x080c, 0x080c, 0x080c, 0x0c0c, 0x0c0c, 0x0c0c, 0x0c0c,
            0x0808, 0x0808, 0x0808, 0x0808, 0x0c08, 0x0c08, 0x0c08, 0x0c08,
            0x080c, 0x080c, 0x080c, 0x080c, 0x0c0c, 0x0c0c, 0x0c0c, 0x0c0c
    };
    private static final int[] TABLE_3480 = {
            0x0000, 0x0400, 0x0004, 0x0404, 0x0000, 0x0400, 0x0004, 0x0404,
            0x0000, 0x0400, 0x0004, 0x0404, 0x0000, 0x0400, 0x0004, 0x0404,
            0x0800, 0x0c00, 0x0804, 0x0c04, 0x0800, 0x0c00, 0x0804, 0x0c04,
            0x0800, 0x0c00, 0x0804, 0x0c04, 0x0800, 0x0c00, 0x0804, 0x0c04,
            0x0008, 0x0408, 0x000c, 0x040c, 0x0008, 0x0408, 0x000c, 0x040c,
            0x0008, 0x0408, 0x000c, 0x040c, 0x0008, 0x0408, 0x000c, 0x040c,
            0x0808, 0x0c08, 0x080c, 0x0c0c, 0x0808, 0x0c08, 0x080c, 0x0c0c,
            0x0808, 0x0c08, 0x080c, 0x0c0c, 0x0808, 0x0c08, 0x080c, 0x0c0c,
            0x0000, 0x0400, 0x0004, 0x0404, 0x0000, 0x0400, 0x0004, 0x0404,
            0x0000, 0x0400, 0x0004, 0x0404, 0x0000, 0x0400, 0x0004, 0x0404,
            0x0800, 0x0c00, 0x0804, 0x0c04, 0x0800, 0x0c00, 0x0804, 0x0c04,
            0x0800, 0x0c00, 0x0804, 0x0c04, 0x0800, 0x0c00, 0x0804, 0x0c04,
            0x0008, 0x0408, 0x000c, 0x040c, 0x0008, 0x0408, 0x000c, 0x040c,
            0x0008, 0x0408, 0x000c, 0x040c, 0x0008, 0x0408, 0x000c, 0x040c,
            0x0808, 0x0c08, 0x080c, 0x0c0c, 0x0808, 0x0c08, 0x080c, 0x0c0c,
            0x0808, 0x0c08, 0x080c, 0x0c0c, 0x0808, 0x0c08, 0x080c, 0x0c0c,
            0x0000, 0x0400, 0x0004, 0x0404, 0x0000, 0x0400, 0x0004, 0x0404,
            0x0000, 0x0400, 0x0004, 0x0404, 0x0000, 0x0400, 0x0004, 0x0404,
            0x0800, 0x0c00, 0x0804, 0x0c04, 0x0800, 0x0c00, 0x0804, 0x0c04,
            0x0800, 0x0c00, 0x0804, 0x0c04, 0x0800, 0x0c00, 0x0804, 0x0c04,
            0x0008, 0x0408, 0x000c, 0x040c, 0x0008, 0x0408, 0x000c, 0x040c,
            0x0008, 0x0408, 0x000c, 0x040c, 0x0008, 0x0408, 0x000c, 0x040c,
            0x0808, 0x0c08, 0x080c, 0x0c0c, 0x0808, 0x0c08, 0x080c, 0x0c0c,
            0x0808, 0x0c08, 0x080c, 0x0c0c, 0x0808, 0x0c08, 0x080c, 0x0c0c,
            0x0000, 0x0400, 0x0004, 0x0404, 0x0000, 0x0400, 0x0004, 0x0404,
            0x0000, 0x0400, 0x0004, 0x0404, 0x0000, 0x0400, 0x0004, 0x0404,
            0x0800, 0x0c00, 0x0804, 0x0c04, 0x0800, 0x0c00, 0x0804, 0x0c04,
            0x0800, 0x0c00, 0x0804, 0x0c04, 0x0800, 0x0c00, 0x0804, 0x0c04,
            0x0008, 0x0408, 0x000c, 0x040c, 0x0008, 0x0408, 0x000c, 0x040c,
            0x0008, 0x0408, 0x000c, 0x040c, 0x0008, 0x0408, 0x000c, 0x040c,
            0x0808, 0x0c08, 0x080c, 0x0c0c, 0x0808, 0x0c08, 0x080c, 0x0c0c,
            0x0808, 0x0c08, 0x080c, 0x0c0c, 0x0808, 0x0c08, 0x080c, 0x0c0c
    };
    private static final int[] TABLE_3680 = {
            0x0000, 0x0000, 0x0000, 0x0000, 0x0100, 0x0100, 0x0100, 0x0100,
            0x0001, 0x0001, 0x0001, 0x0001, 0x0101, 0x0101, 0x0101, 0x0101,
            0x0000, 0x0000, 0x0000, 0x0000, 0x0100, 0x0100, 0x0100, 0x0100,
            0x0001, 0x0001, 0x0001, 0x0001, 0x0101, 0x0101, 0x0101, 0x0101,
            0x0000, 0x0000, 0x0000, 0x0000, 0x0100, 0x0100, 0x0100, 0x0100,
            0x0001, 0x0001, 0x0001, 0x0001, 0x0101, 0x0101, 0x0101, 0x0101,
            0x0000, 0x0000, 0x0000, 0x0000, 0x0100, 0x0100, 0x0100, 0x0100,
            0x0001, 0x0001, 0x0001, 0x0001, 0x0101, 0x0101, 0x0101, 0x0101,
            0x0200, 0x0200, 0x0200, 0x0200, 0x0300, 0x0300, 0x0300, 0x0300,
            0x0201, 0x0201, 0x0201, 0x0201, 0x0301, 0x0301, 0x0301, 0x0301,
            0x0200, 0x0200, 0x0200, 0x0200, 0x0300, 0x0300, 0x0300, 0x0300,
            0x0201, 0x0201, 0x0201, 0x0201, 0x0301, 0x0301, 0x0301, 0x0301,
            0x0200, 0x0200, 0x0200, 0x0200, 0x0300, 0x0300, 0x0300, 0x0300,
            0x0201, 0x0201, 0x0201, 0x0201, 0x0301, 0x0301, 0x0301, 0x0301,
            0x0200, 0x0200, 0x0200, 0x0200, 0x0300, 0x0300, 0x0300, 0x0300,
            0x0201, 0x0201, 0x0201, 0x0201, 0x0301, 0x0301, 0x0301, 0x0301,
            0x0002, 0x0002, 0x0002, 0x0002, 0x0102, 0x0102, 0x0102, 0x0102,
            0x0003, 0x0003, 0x0003, 0x0003, 0x0103, 0x0103, 0x0103, 0x0103,
            0x0002, 0x0002, 0x0002, 0x0002, 0x0102, 0x0102, 0x0102, 0x0102,
            0x0003, 0x0003, 0x0003, 0x0003, 0x0103, 0x0103, 0x0103, 0x0103,
            0x0002, 0x0002, 0x0002, 0x0002, 0x0102, 0x0102, 0x0102, 0x0102,
            0x0003, 0x0003, 0x0003, 0x0003, 0x0103, 0x0103, 0x0103, 0x0103,
            0x0002, 0x0002, 0x0002, 0x0002, 0x0102, 0x0102, 0x0102, 0x0102,
            0x0003, 0x0003, 0x0003, 0x0003, 0x0103, 0x0103, 0x0103, 0x0103,
            0x0202, 0x0202, 0x0202, 0x0202, 0x0302, 0x0302, 0x0302, 0x0302,
            0x0203, 0x0203, 0x0203, 0x0203, 0x0303, 0x0303, 0x0303, 0x0303,
            0x0202, 0x0202, 0x0202, 0x0202, 0x0302, 0x0302, 0x0302, 0x0302,
            0x0203, 0x0203, 0x0203, 0x0203, 0x0303, 0x0303, 0x0303, 0x0303,
            0x0202, 0x0202, 0x0202, 0x0202, 0x0302, 0x0302, 0x0302, 0x0302,
            0x0203, 0x0203, 0x0203, 0x0203, 0x0303, 0x0303, 0x0303, 0x0303,
            0x0202, 0x0202, 0x0202, 0x0202, 0x0302, 0x0302, 0x0302, 0x0302,
            0x0203, 0x0203, 0x0203, 0x0203, 0x0303, 0x0303, 0x0303, 0x0303
    };
    private static final int[] TABLE_3880 = {
            0x0000, 0x0100, 0x0001, 0x0101, 0x0000, 0x0100, 0x0001, 0x0101,
            0x0000, 0x0100, 0x0001, 0x0101, 0x0000, 0x0100, 0x0001, 0x0101,
            0x0200, 0x0300, 0x0201, 0x0301, 0x0200, 0x0300, 0x0201, 0x0301,
            0x0200, 0x0300, 0x0201, 0x0301, 0x0200, 0x0300, 0x0201, 0x0301,
            0x0002, 0x0102, 0x0003, 0x0103, 0x0002, 0x0102, 0x0003, 0x0103,
            0x0002, 0x0102, 0x0003, 0x0103, 0x0002, 0x0102, 0x0003, 0x0103,
            0x0202, 0x0302, 0x0203, 0x0303, 0x0202, 0x0302, 0x0203, 0x0303,
            0x0202, 0x0302, 0x0203, 0x0303, 0x0202, 0x0302, 0x0203, 0x0303,
            0x0000, 0x0100, 0x0001, 0x0101, 0x0000, 0x0100, 0x0001, 0x0101,
            0x0000, 0x0100, 0x0001, 0x0101, 0x0000, 0x0100, 0x0001, 0x0101,
            0x0200, 0x0300, 0x0201, 0x0301, 0x0200, 0x0300, 0x0201, 0x0301,
            0x0200, 0x0300, 0x0201, 0x0301, 0x0200, 0x0300, 0x0201, 0x0301,
            0x0002, 0x0102, 0x0003, 0x0103, 0x0002, 0x0102, 0x0003, 0x0103,
            0x0002, 0x0102, 0x0003, 0x0103, 0x0002, 0x0102, 0x0003, 0x0103,
            0x0202, 0x0302, 0x0203, 0x0303, 0x0202, 0x0302, 0x0203, 0x0303,
            0x0202, 0x0302, 0x0203, 0x0303, 0x0202, 0x0302, 0x0203, 0x0303,
            0x0000, 0x0100, 0x0001, 0x0101, 0x0000, 0x0100, 0x0001, 0x0101,
            0x0000, 0x0100, 0x0001, 0x0101, 0x0000, 0x0100, 0x0001, 0x0101,
            0x0200, 0x0300, 0x0201, 0x0301, 0x0200, 0x0300, 0x0201, 0x0301,
            0x0200, 0x0300, 0x0201, 0x0301, 0x0200, 0x0300, 0x0201, 0x0301,
            0x0002, 0x0102, 0x0003, 0x0103, 0x0002, 0x0102, 0x0003, 0x0103,
            0x0002, 0x0102, 0x0003, 0x0103, 0x0002, 0x0102, 0x0003, 0x0103,
            0x0202, 0x0302, 0x0203, 0x0303, 0x0202, 0x0302, 0x0203, 0x0303,
            0x0202, 0x0302, 0x0203, 0x0303, 0x0202, 0x0302, 0x0203, 0x0303,
            0x0000, 0x0100, 0x0001, 0x0101, 0x0000, 0x0100, 0x0001, 0x0101,
            0x0000, 0x0100, 0x0001, 0x0101, 0x0000, 0x0100, 0x0001, 0x0101,
            0x0200, 0x0300, 0x0201, 0x0301, 0x0200, 0x0300, 0x0201, 0x0301,
            0x0200, 0x0300, 0x0201, 0x0301, 0x0200, 0x0300, 0x0201, 0x0301,
            0x0002, 0x0102, 0x0003, 0x0103, 0x0002, 0x0102, 0x0003, 0x0103,
            0x0002, 0x0102, 0x0003, 0x0103, 0x0002, 0x0102, 0x0003, 0x0103,
            0x0202, 0x0302, 0x0203, 0x0303, 0x0202, 0x0302, 0x0203, 0x0303,
            0x0202, 0x0302, 0x0203, 0x0303, 0x0202, 0x0302, 0x0203, 0x0303
    };

    /* This is the default EGA color pallette, taken from the EGA / VGA Programmer's Reference Manual p202.
     * I used the colors as displayed by DOSBOX on my modern screen. */
    public static int convertColorIndex(int index) {
        switch(index & 0x0f) {
            case 0 ->  { return 0xff000000; } // black
            case 1 ->  { return 0xff0000aa; } // blue
            case 2 ->  { return 0xff00aa00; } // green
            case 3 ->  { return 0xff00aaaa; } // cyan
            case 4 ->  { return 0xffaa0000; } // red
            case 5 ->  { return 0xffaa00aa; } // magenta
            case 6 ->  { return 0xffaaff00; } // brown
            case 7 ->  { return 0xffaaaaaa; } // white
            case 8 ->  { return 0xff555555; } // dark gray
            case 9 ->  { return 0xff5555ff; } // light blue
            case 10 -> { return 0xff55ff55; } // light green
            case 11 -> { return 0xff55ffff; } // light cyan
            case 12 -> { return 0xffff5555; } // light red
            case 13 -> { return 0xffff55ff; } // light magenta
            case 14 -> { return 0xffffff55; } // yellow
            case 15 -> { return 0xffffffff; } // bright white
            default -> {
                System.out.println("Default: " + index);
                return 0xff333333;
            }
        }
    }

    public static BufferedImage scale(final BufferedImage before, final double scale, final int type) {
        int w = before.getWidth();
        int h = before.getHeight();
        int w2 = (int) (w * scale);
        int h2 = (int) (h * scale);
        BufferedImage after = new BufferedImage(w2, h2, before.getType());
        AffineTransform scaleInstance = AffineTransform.getScaleInstance(scale, scale);
        AffineTransformOp scaleOp = new AffineTransformOp(scaleInstance, type);
        scaleOp.filter(before, after);
        return after;
    }

}
